# Nginx configuration for Namada RPC Proxy (namacall.namadata.xyz)
# This configuration is designed to work alongside other nginx sites
# Place this file in /etc/nginx/sites-available/ and symlink to sites-enabled/

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=namada_rpc_limit:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=namada_health_limit:1m rate=1r/s;

# Upstream backend
upstream namada_rpc_backend {
    server 127.0.0.1:3000 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

# HTTP redirect to HTTPS for namacall.namadata.xyz
server {
    listen 80;
    listen [::]:80;
    server_name namacall.namadata.xyz;
    
    # Health check endpoint (allow HTTP for monitoring)
    location = /health {
        proxy_pass http://namada_rpc_backend;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        access_log off;
    }
    
    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS server for namacall.namadata.xyz
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name namacall.namadata.xyz;
    
    # SSL Configuration
    # Note: Replace these paths with your actual SSL certificate paths
    # For Let's Encrypt, run: sudo certbot --nginx -d namacall.namadata.xyz
    ssl_certificate /etc/ssl/certs/ssl-cert-snakeoil.pem;
    ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;
    
    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; frame-ancestors 'none';" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    
    # CORS headers for RPC endpoints
    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
    add_header Access-Control-Max-Age 3600 always;
    
    # Handle preflight requests
    if ($request_method = 'OPTIONS') {
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With";
        add_header Access-Control-Max-Age 3600;
        add_header Content-Length 0;
        add_header Content-Type "text/plain charset=UTF-8";
        return 204;
    }
    
    # Logging
    access_log /var/log/nginx/namada-rpc-proxy.access.log combined;
    error_log /var/log/nginx/namada-rpc-proxy.error.log warn;
    
    # Health check endpoints (minimal rate limiting)
    location ~ ^/health(/.*)?$ {
        limit_req zone=namada_health_limit burst=10 nodelay;
        
        proxy_pass http://namada_rpc_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 30s;
        proxy_connect_timeout 5s;
        proxy_send_timeout 30s;
        
        # Cache health responses briefly
        expires 5s;
        add_header Cache-Control "public, no-transform";
    }
    
    # RPC endpoints with rate limiting
    location ~ ^/(namada|housefiretestnet)/ {
        limit_req zone=namada_rpc_limit burst=30 nodelay;
        limit_req_status 429;
        
        # Proxy configuration
        proxy_pass http://namada_rpc_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 8k;
        proxy_buffers 16 8k;
        proxy_busy_buffers_size 16k;
        proxy_max_temp_file_size 1024m;
        
        # Request size limits
        client_max_body_size 2M;
        client_body_buffer_size 128k;
        
        # Add response headers
        add_header X-Served-By "namada-rpc-proxy" always;
        add_header X-Response-Time $upstream_response_time always;
    }
    
    # Root location with information
    location = / {
        add_header Content-Type "application/json" always;
        return 200 '{"service":"Namada RPC Proxy","status":"running","endpoints":["/health","/namada/*","/housefiretestnet/*"],"documentation":"https://github.com/user/namada-rpc-proxy"}';
    }
    
    # Block all other requests
    location / {
        add_header Content-Type "application/json" always;
        return 404 '{"error":"Not Found","message":"Invalid endpoint. Available: /health, /namada/*, /housefiretestnet/*"}';
    }
}

# Internal monitoring server (localhost only)
server {
    listen 127.0.0.1:8080;
    server_name localhost;
    
    # Detailed health and metrics (internal only)
    location /health/detailed {
        proxy_pass http://namada_rpc_backend;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        access_log off;
    }
    
    location /health/metrics {
        proxy_pass http://namada_rpc_backend;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        access_log off;
    }
    
    location /health/chains {
        proxy_pass http://namada_rpc_backend;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        access_log off;
    }
    
    # Nginx status (optional)
    location /nginx_status {
        stub_status on;
        access_log off;
    }
    
    # Default deny
    location / {
        return 403;
    }
} 