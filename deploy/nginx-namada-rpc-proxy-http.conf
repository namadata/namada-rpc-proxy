# Nginx configuration for Namada RPC Proxy (HTTP only - before SSL setup)
# This configuration works without SSL certificates
# Run this first, then use certbot to add SSL

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=namada_rpc_limit:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=namada_health_limit:1m rate=1r/s;

# Upstream backend
upstream namada_rpc_backend {
    server 127.0.0.1:3001 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

# HTTP server for namacall.namadata.xyz
server {
    listen 80;
    listen [::]:80;
    server_name namacall.namadata.xyz;
    
    # Security headers (basic set for HTTP)
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # CORS headers for RPC endpoints
    add_header Access-Control-Allow-Origin "*" always;
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
    add_header Access-Control-Max-Age 3600 always;
    
    # Logging
    access_log /var/log/nginx/namada-rpc-proxy.access.log combined;
    error_log /var/log/nginx/namada-rpc-proxy.error.log warn;
    
    # Handle preflight OPTIONS requests
    location = /options {
        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With";
        add_header Access-Control-Max-Age 3600;
        add_header Content-Length 0;
        add_header Content-Type "text/plain charset=UTF-8";
        return 204;
    }
    
    # Health check endpoints
    location ~ ^/health(/.*)?$ {
        limit_req zone=namada_health_limit burst=10 nodelay;
        
        proxy_pass http://namada_rpc_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 30s;
        proxy_connect_timeout 5s;
        proxy_send_timeout 30s;
    }
    
    # RPC endpoints with rate limiting
    location ~ ^/(namada|housefiretestnet)/ {
        limit_req zone=namada_rpc_limit burst=30 nodelay;
        limit_req_status 429;
        
        proxy_pass http://namada_rpc_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 8k;
        proxy_buffers 16 8k;
        
        # Request size limits
        client_max_body_size 2M;
        client_body_buffer_size 128k;
        
        # Response headers
        add_header X-Served-By "namada-rpc-proxy";
    }
    
    # Root location with information
    location = / {
        return 200 '{"service":"Namada RPC Proxy","status":"running","endpoints":["/health","/namada/*","/housefiretestnet/*"],"note":"HTTP mode - SSL not configured yet"}';
    }
    
    # Block all other requests
    location / {
        return 404 '{"error":"Not Found","message":"Invalid endpoint. Available: /health, /namada/*, /housefiretestnet/*"}';
    }
}

# Internal monitoring server (localhost only)
server {
    listen 127.0.0.1:8080;
    server_name localhost;
    
    # Detailed health and metrics (internal only)
    location /health/detailed {
        proxy_pass http://namada_rpc_backend;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        access_log off;
    }
    
    location /health/metrics {
        proxy_pass http://namada_rpc_backend;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        access_log off;
    }
    
    location /health/chains {
        proxy_pass http://namada_rpc_backend;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        access_log off;
    }
    
    # Nginx status
    location /nginx_status {
        stub_status on;
        access_log off;
    }
    
    # Default deny
    location / {
        return 403;
    }
} 